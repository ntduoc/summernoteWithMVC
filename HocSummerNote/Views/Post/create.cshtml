@model HocSummerNote.Models.post

@{
    ViewBag.Title = "create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


<!--Liên kết với những file CSS và JS của summernote-->
<!-- include summernote css/js -->
<link href="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.12/summernote.css" rel="stylesheet">
<script src="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.12/summernote.js"></script>

<script type="text/javascript">
        $(document).ready(function () {
            $(".content-editor").summernote({
                height: 300,
                minHeight: null,
                maxHeight: null,
                codemirror: {
                    theme: "monokai"
                },
                callbacks: {
                    onImageUpload: function (files) {
                        for (var i = 0; i < files.length; i++) {
                            uploadImage(files[i]);
                        }
                    }
                },
                fontSizes: ['12', '14', '16', '18', '24', '36', '48'],
                toolbar: [
                      ['style', ['style']],
                      ['font', ['bold', 'underline', 'clear']],
                      ['fontname', ['fontname']],
                      ['fontsize', ['fontsize']],
                      ['color', ['color']],
                      ['para', ['ul', 'ol', 'paragraph']],
                      ['table', ['table']],
                      ['insert', ['link', 'picture', 'video']],
                      ['view', ['fullscreen', 'codeview', 'help']],
                ],
            });
        });

        //Phương thức uploadimage
        //Phương thức này sẽ được gọi trong CallBacks của SummerNote mỗi khi chọn hình để chèn vào bài viết

        function uploadImage(file) {
            var formData = new FormData();
            formData.append("uploadFiles", file);
            $.ajax({
                data: formData,
                type: "POST",
                url: '/Post/UploadFile',
                cache: false,
                contentType: false,
                processData: false,
                success: function (FileUrl) {
                    alert(FileUrl);
                    var imgNode = document.createElement('img');
                    imgNode.src = FileUrl;
                    $('.content-editor').summernote('insertNode', imgNode);
                },
                error: function (data) {
                    alert(data.responseText);
                }
            });
        }

</script>
}






<h2>create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>post</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*
                    Lưu ý ở đây mình đã gán cho Content class content-editor
                *@
                @Html.TextAreaFor(model => model.Content, new { @class = "form-control content-editor" })

                @*@Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Active)
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

